package corba;


/**
* corba/SensorPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from flood-warning.idl
* Tuesday, March 24, 2015 1:43:22 PM GMT
*/

public abstract class SensorPOA extends org.omg.PortableServer.Servant
 implements corba.SensorOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_id", new java.lang.Integer (0));
    _methods.put ("_get_zone", new java.lang.Integer (1));
    _methods.put ("currentReading", new java.lang.Integer (2));
    _methods.put ("getReadingLog", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // corba/Sensor/_get_id
       {
         String $result = null;
         $result = this.id ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // corba/Sensor/_get_zone
       {
         String $result = null;
         $result = this.zone ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // corba/Sensor/currentReading
       {
         int $result = (int)0;
         $result = this.currentReading ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 3:  // corba/Sensor/getReadingLog
       {
         corba.Reading $result[] = null;
         $result = this.getReadingLog ();
         out = $rh.createReply();
         corba.ReadingsHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:corba/Sensor:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Sensor _this() 
  {
    return SensorHelper.narrow(
    super._this_object());
  }

  public Sensor _this(org.omg.CORBA.ORB orb) 
  {
    return SensorHelper.narrow(
    super._this_object(orb));
  }


} // class SensorPOA
